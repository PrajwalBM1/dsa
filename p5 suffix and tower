#include<stdio.h>
#include<math.h>
#include<string.h>
int s[30],op1,op2;
int top=-1,i;
char p[30],sym;


int op(int op1,char sym,int op2){
    switch(sym){
        case '+':return op1+op2;
        case '-':return op1-op2;
        case '*':return op1*op2;
        case '/':return op1/op2;
        case '%':return op1%op2;
        case '^':
        case '$':return pow(op1,op2);
    }
    return 0;
}


int main(){
    printf("\nEnter the valid postfix exp:");
    scanf("%s",p);
    for(i=0;i<strlen(p);i++){
        sym=p[i];
        if(sym>='0' &&sym<='9')
        s[++top]=sym-'0';
        else {
        op2=s[top--];
        op1=s[top--];
        s[++top]=op(op1,sym,op2);
        }
    }
    printf("\nThe result is %d",s[top]);
}



#include <stdio.h>
void towers(int, char, char, char);
int main(){
    int num;
    printf("Enter the number of disks : ");
    scanf("%d", &num);
    printf("The sequence of moves involved in the Tower of Hanoi are :\n");
    towers(num, 'A', 'C', 'B');
    return 0;
}
void towers(int num, char frompeg, char topeg, char auxpeg){
    if (num == 1) {
        printf("\n Move disk 1 from peg %c to peg %c", frompeg, topeg);
    }else{
    towers(num - 1, frompeg, auxpeg, topeg);
    printf("\n Move disk %d from peg %c to peg %c", num, frompeg, topeg);
    towers(num - 1, auxpeg, topeg, frompeg);    
    }
}


